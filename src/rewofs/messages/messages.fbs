namespace rewofs.messages;

//==========================================================================

struct Time
{
    nsec:int64;
    sec:int64;
}

struct Stat
{
    st_mode:uint32;
    st_nlink:uint64;
    st_size:int64;
    st_atim:Time;
    st_ctim:Time;
    st_mtim:Time;
}

table TreeNode
{
    name:string;
    st:Stat;
    children:[TreeNode];
}

//==========================================================================

table Ping {}
table Pong {}

//==========================================================================

table CommandReadTree
{
    path:string;
}
table ResultReadTree
{
    res_errno:int32;
    tree:TreeNode;
}

table CommandStat
{
    path:string;
}
table ResultStat
{
    res_errno:int32;
    st:Stat;
}

table CommandReaddir
{
    path:string;
}
table ResultReaddir
{
    res_errno:int32;
    items:[TreeNode];
}

table CommandReadlink
{
    path:string;
}
table ResultReadlink
{
    res_errno:int32;
    path:string;
}

table CommandMkdir
{
    path:string;
    mode:uint32;
}

table CommandRmdir
{
    path:string;
}

table CommandUnlink
{
    path:string;
}

table CommandSymlink
{
    link_path:string;
    target:string;
}

table CommandRename
{
    old_path:string;
    new_path:string;
}

table CommandChmod
{
    path:string;
    mode:uint32;
}

table CommandTruncate
{
    path:string;
    lenght:uint64;
}

table CommandOpen
{
  path:string;
  file_handle:uint64;
  flags:int32;
  /// true means use a mode value
  set_mode:bool;
  mode:uint32;
}

table CommandClose
{
  file_handle:uint64;
}

table CommandRead
{
  file_handle:uint64;
  offset:uint64;
  size:uint64;
}
table ResultRead
{
    res:int64;
    res_errno:int32;
    data:[ubyte];
}

table CommandWrite
{
  file_handle:uint64;
  offset:int64;
  data:[ubyte];
}
table ResultWrite
{
    res:int64;
    res_errno:int32;
}

table ResultErrno
{
    res_errno:int32;
}
